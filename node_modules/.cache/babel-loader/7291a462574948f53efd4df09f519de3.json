{"ast":null,"code":"import React from\"react\";import millify from\"millify\";import{Collapse,Row,Col,Typography,Avatar}from\"antd\";import HTMLReactParser from\"html-react-parser\";import{useGetCryptoExchangesQuery}from\"../services/cryptoApi\";import Loader from\"./Loader\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Text=Typography.Text;var Panel=Collapse.Panel;var Exchanges=function Exchanges(){var _data$data;var _useGetCryptoExchange=useGetCryptoExchangesQuery(),data=_useGetCryptoExchange.data,isFetching=_useGetCryptoExchange.isFetching;var exchangesList=data===null||data===void 0?void 0:(_data$data=data.data)===null||_data$data===void 0?void 0:_data$data.exchanges;if(isFetching)return/*#__PURE__*/_jsx(Loader,{});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{span:6,children:\"Exchanges\"}),/*#__PURE__*/_jsx(Col,{span:6,children:\"24h Trade Volume\"}),/*#__PURE__*/_jsx(Col,{span:6,children:\"Markets\"}),/*#__PURE__*/_jsx(Col,{span:6,children:\"Change\"})]}),/*#__PURE__*/_jsx(Row,{children:exchangesList.map(function(exchange){return/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(Collapse,{children:/*#__PURE__*/_jsx(Panel,{showArrow:false,header:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{span:6,children:[/*#__PURE__*/_jsx(Text,{children:/*#__PURE__*/_jsxs(\"strong\",{children:[exchange.rank,\".\"]})}),/*#__PURE__*/_jsx(Avatar,{className:\"exchange-image\",src:exchange.iconUrl}),/*#__PURE__*/_jsx(Text,{children:/*#__PURE__*/_jsxs(\"strong\",{children:[exchange.name,\".\"]})})]}),/*#__PURE__*/_jsxs(Col,{span:6,children:[\"$\",millify(exchange.volume)]}),/*#__PURE__*/_jsx(Col,{span:6,children:millify(exchange.numberOfMarkets)}),/*#__PURE__*/_jsxs(Col,{span:6,children:[millify(exchange.marketShare),\"%\"]})]},exchange.id),children:HTMLReactParser(exchange.description||'')},exchange.id)})});})})]});};export default Exchanges;","map":{"version":3,"sources":["/home/arnaud/developpement/react_projects/crypto_knight/src/components/Exchanges.jsx"],"names":["React","millify","Collapse","Row","Col","Typography","Avatar","HTMLReactParser","useGetCryptoExchangesQuery","Loader","Text","Panel","Exchanges","data","isFetching","exchangesList","exchanges","map","exchange","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","description"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,QAAT,CAAmBC,GAAnB,CAAwBC,GAAxB,CAA6BC,UAA7B,CAAyCC,MAAzC,KAAuD,MAAvD,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA,OAASC,0BAAT,KAA2C,uBAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,6IAEA,GAAQC,CAAAA,IAAR,CAAiBL,UAAjB,CAAQK,IAAR,CACA,GAAQC,CAAAA,KAAR,CAAkBT,QAAlB,CAAQS,KAAR,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,gBACtB,0BAA6BJ,0BAA0B,EAAvD,CAAQK,IAAR,uBAAQA,IAAR,CAAcC,UAAd,uBAAcA,UAAd,CACA,GAAMC,CAAAA,aAAa,CAAGF,IAAH,SAAGA,IAAH,6BAAGA,IAAI,CAAEA,IAAT,qCAAG,WAAYG,SAAlC,CACA,GAAIF,UAAJ,CAAgB,mBAAO,KAAC,MAAD,IAAP,CAChB,mBACE,wCACE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,uBADF,cAEE,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,8BAFF,cAGE,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,qBAHF,cAIE,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,oBAJF,GADF,cAOE,KAAC,GAAD,WACGC,aAAa,CAACE,GAAd,CAAkB,SAACC,QAAD,qBACjB,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,QAAD,wBACE,KAAC,KAAD,EAEE,SAAS,CAAE,KAFb,CAGE,MAAM,cACH,MAAC,GAAD,yBACC,MAAC,GAAD,EAAK,IAAI,CAAE,CAAX,wBACE,KAAC,IAAD,wBACE,0BAASA,QAAQ,CAACC,IAAlB,OADF,EADF,cAIE,KAAC,MAAD,EACE,SAAS,CAAC,gBADZ,CAEE,GAAG,CAAED,QAAQ,CAACE,OAFhB,EAJF,cAQG,KAAC,IAAD,wBACC,0BAASF,QAAQ,CAACG,IAAlB,OADD,EARH,GADD,cAaC,MAAC,GAAD,EAAK,IAAI,CAAE,CAAX,eAAgBpB,OAAO,CAACiB,QAAQ,CAACI,MAAV,CAAvB,GAbD,cAcC,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,UAAerB,OAAO,CAACiB,QAAQ,CAACK,eAAV,CAAtB,EAdD,cAeC,MAAC,GAAD,EAAK,IAAI,CAAE,CAAX,WAAetB,OAAO,CAACiB,QAAQ,CAACM,WAAV,CAAtB,OAfD,GAAUN,QAAQ,CAACO,EAAnB,CAJL,UAsBElB,eAAe,CAACW,QAAQ,CAACQ,WAAT,EAAwB,EAAzB,CAtBjB,EACOR,QAAQ,CAACO,EADhB,CADF,EADF,EADiB,EAAlB,CADH,EAPF,GADF,CAyCD,CA7CD,CA+CA,cAAeb,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetCryptoExchangesQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetCryptoExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n  if (isFetching) return <Loader />;\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                 ( <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                       <Text>\n                        <strong>{exchange.name}.</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>)\n        }\n              >{HTMLReactParser(exchange.description || '')}</Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n"]},"metadata":{},"sourceType":"module"}