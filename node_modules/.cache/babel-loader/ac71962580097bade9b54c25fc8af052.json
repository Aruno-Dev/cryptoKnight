{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState('7d'); //7 days\n\n  const {\n    cryptoDetails,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  console.log(cryptoDetails);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(CryptoDetails, \"ybVEkU2yZvnavo4gC47DVLjy2MM=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/home/arnaud/developpement/react_projects/crypto_app/src/components/CryptoDetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","HomeOutlined","MoneyCollectOutlined","BulbOutlined","FundOutlined","MenuOutlined","useGetCryptoDetailsQuery","Title","Text","Option","CryptoDetails","coinId","timePeriod","setTimePeriod","cryptoDetails","isFetching","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C;AACA,SACEC,YADF,EAEEC,oBAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,YALF,QAMO,mBANP;AAQA,SAAQC,wBAAR,QAAuC,uBAAvC;;;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAkBT,UAAxB;AACA,MAAM;AAAEU,EAAAA;AAAF,IAAaT,MAAnB;;AAEA,MAAMU,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM;AAACC,IAAAA;AAAD,MAAWhB,SAAS,EAA1B;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,IAAD,CAA5C,CAFwB,CAE4B;;AACpD,QAAK;AAACqB,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAA8BT,wBAAwB,CAACK,MAAD,CAA3D;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACF,sBACA,qCADA;AAGD,CARD;;GAAMJ,a;UACef,S,EAEkBW,wB;;;KAHjCI,a;AAUN,eAAeA,aAAf","sourcesContent":["import React, {useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\n\nimport {useGetCryptoDetailsQuery} from \"../services/cryptoApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n    const {coinId} = useParams();\n    const [timePeriod, setTimePeriod] = useState('7d'); //7 days\n    const{cryptoDetails, isFetching} = useGetCryptoDetailsQuery(coinId);\n    console.log(cryptoDetails)\n  return (\n  <></>\n  );\n};\n\nexport default CryptoDetails;\n"]},"metadata":{},"sourceType":"module"}