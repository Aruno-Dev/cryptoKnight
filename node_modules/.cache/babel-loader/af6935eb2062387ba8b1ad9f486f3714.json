{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';var cryptoApiHeaders={'x-rapidapi-host':'coinranking1.p.rapidapi.com','x-rapidapi-key':'79419e7059mshe8463e19c9851aap12a31cjsn5c506c7acfe2'};var baseUrl='https://coinranking1.p.rapidapi.com';var createRequest=function createRequest(url){return{url:url,headers:cryptoApiHeaders};};export var cryptoApi=createApi({reducerPath:'cryptoApi',baseQuery:fetchBaseQuery({baseUrl:baseUrl}),endpoints:function endpoints(builder){return{getCryptos:builder.query({query:function query(count){return createRequest(\"/coins?limit=\".concat(count));}}),getCryptoDetails:builder.query({query:function query(coinId){return createRequest(\"/coin/\".concat(coinId));}}),getCryptoHistory:builder.query({query:function query(_ref){var coinId=_ref.coinId,timePeriod=_ref.timePeriod;return createRequest(\"/coin/\".concat(coinId,\"/history/\").concat(timePeriod));}}),getCryptoExchanges:builder.query({query:function query(){return createRequest(\"/exchanges\");}})};}});var useGetCryptosQuery=cryptoApi.useGetCryptosQuery,useGetCryptoDetailsQuery=cryptoApi.useGetCryptoDetailsQuery,useGetCryptoHistoryQuery=cryptoApi.useGetCryptoHistoryQuery,useGetCryptoExchangesQuery=cryptoApi.useGetCryptoExchangesQuery;export{useGetCryptosQuery,useGetCryptoDetailsQuery,useGetCryptoHistoryQuery,useGetCryptoExchangesQuery};","map":{"version":3,"sources":["/home/arnaud/developpement/react_projects/crypto_knight/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getCryptoExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetCryptoExchangesQuery"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACrB,kBAAmB,6BADE,CAErB,iBAAkB,oDAFG,CAAzB,CAKA,GAAMC,CAAAA,OAAO,CAAG,qCAAhB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QAAU,CAAEA,GAAG,CAAHA,GAAF,CAAOC,OAAO,CAAEJ,gBAAhB,CAAV,EAAtB,CACA,MAAO,IAAMK,CAAAA,SAAS,CAAGP,SAAS,CAAC,CAC/BQ,WAAW,CAAE,WADkB,CAE/BC,SAAS,CAAER,cAAc,CAAC,CAAEE,OAAO,CAAPA,OAAF,CAAD,CAFM,CAG/BO,SAAS,CAAE,mBAACC,OAAD,QAAc,CACrBC,UAAU,CAAED,OAAO,CAACE,KAAR,CAAc,CACtBA,KAAK,CAAE,eAACC,KAAD,QAAWV,CAAAA,aAAa,wBAAiBU,KAAjB,EAAxB,EADe,CAAd,CADS,CAIrBC,gBAAgB,CAACJ,OAAO,CAACE,KAAR,CAAc,CAC3BA,KAAK,CAAC,eAACG,MAAD,QAAYZ,CAAAA,aAAa,iBAAUY,MAAV,EAAzB,EADqB,CAAd,CAJI,CAOrBC,gBAAgB,CAACN,OAAO,CAACE,KAAR,CAAc,CAC3BA,KAAK,CAAC,wBAAEG,CAAAA,MAAF,MAAEA,MAAF,CAAUE,UAAV,MAAUA,UAAV,OAA0Bd,CAAAA,aAAa,iBAAUY,MAAV,qBAA4BE,UAA5B,EAAvC,EADqB,CAAd,CAPI,CAUrBC,kBAAkB,CAACR,OAAO,CAACE,KAAR,CAAc,CAC7BA,KAAK,CAAC,uBAAMT,CAAAA,aAAa,cAAnB,EADuB,CAAd,CAVE,CAAd,EAHoB,CAAD,CAA3B,CAmBA,GACHgB,CAAAA,kBADG,CAEHb,SAFG,CACHa,kBADG,CACiBC,wBADjB,CAEHd,SAFG,CACiBc,wBADjB,CAC2CC,wBAD3C,CAEHf,SAFG,CAC2Ce,wBAD3C,CACqEC,0BADrE,CAEHhB,SAFG,CACqEgB,0BADrE,C","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '79419e7059mshe8463e19c9851aap12a31cjsn5c506c7acfe2'\n};\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: (count) => createRequest(`/coins?limit=${count}`)\n        }),\n        getCryptoDetails:builder.query({\n            query:(coinId) => createRequest(`/coin/${coinId}`)\n        }),\n        getCryptoHistory:builder.query({\n            query:({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n        }),\n        getCryptoExchanges:builder.query({\n            query:() => createRequest(`/exchanges`)\n        })\n    })\n});\n\nexport const {\n    useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetCryptoExchangesQuery\n} = cryptoApi;"]},"metadata":{},"sourceType":"module"}